MuaBox 1.0 Beta ORM 类库 (非开源)

基于 C# .Net Framework 2.0 以及 MySQL 的 ORM 类库

====================
开发环境:
====================

Windows 7
Visual Studio 2008
C# .Net Framework 2.0
MySQL 5.6.17.0
MySQL Workbench CE 6.1.4
MySQL Connector Net 6.7.4

====================
如何演示:
====================

如果只是演示功能 可以使用 Workbench 导入以下文件还原数据库、数据表和数据：
/Release/MuaBox.sql
然后运行网站中 Demo 目录下的相应程序

====================
补充说明: 2017.05.10
====================

这是两年前的类库 放上 Github 时有点仓促 近期很偶然地被问及一些问题 记录一下
0.0 类库是基于 CODE FIRST 思想 并期望完全通过 定制模型及其特性 解决 B/S 模式下的 IO 处理问题
1.0 类库几乎密封 所有修饰均带 internal 只因基于 B/S 的 WEB 入口太多 类库本身的主要一个职责是保护数据 IO 的安全
    即 设计开始 就假定 WEB 环境不安全 数据只能通过一个 IO 出入口处理 ( 中间服务器这些与类库无关的传输安全问题忽略 )
1.1 当然 安全问题 只是相对的 如果你不介意你的 C# DLL 被反编译至中间语言 那 C# DLL 就足够了
    如果你介意的话 只有用 C++ 创建 DLL 但前提是 你不介意你的 C++ DLL 被反编译至 CPU 指令
1.2 类库初衷是期望数据与数据库之间是扁平的 尽量减少绑定数据或类似于 MVC 中数据 "穿层" 时的 "焊接" 代码
1.3 类库把用户登录验证问题绑定至模型级别 或者说 类库把用户登录验证问题 拆散 然后分派成若干模型特性 
    可以通过在模型上定义若干特性组合来处理用户登录验证
    这也是基于 MVC 2.0 - 4.0 的用户登录验证模块存在各版本之间升级和扩展问题
1.4 类库处理文件的方式是 把文件作为模型中一个特殊的字段 并且基于传统的 WEB 上传与存储文件的方式 ( 文件暴露在 WEB 上 )
1.5 类库在 B/S 模式下通过自动获取 HTML FORM 字段 并匹配 对应的预定义模型
    类库预留了通过直接向预定义模型填充数据并手动提交的方法 ( 考虑到需要在 C/S 模式下运行 )
2.0 类库至最后一次更新 也就是放上 Github 时 还有若干问题需要改进:
    a. 对 模型进出类库 (模型可能已含数据) 进行权限过滤的控制器
       EX: 某模型含数据 刷新至 DB 时 进行 W/R/U/I 等等的过滤
    b. 对 模型中所含数据 进行加解密 ( 基于上述 1.0 ) 出入类库的 数据 有一个加解密过程 即最终存储至 DB 中的数据是非明文
       但具体实现与上述 1.1 有相搏 待考量
    c. 基于上述 1.0 1.1 数据在类库中处理时 数据是短暂经过内存的 一台 WEB SERVER 被入侵 内存可能被监控 
       如何保护 类库处理数据时的数据安全 待考量
    d. 模型 TO DB 后 若修改模型 模型与 DB 的对称问题 以及数据同步问题
    e. 类库可以进行基于模型的树状数据抽取 但对应的反向过程未实现
    f. 当初选择并一直使用 .Net Framework 2.0 以及 MySQL 是考虑到以后跨平台 
       而现在的状况来看 MS 又真的 Release 了一个 .Net Core :) 期待
